package models

import (
	"fmt"
)

type Malware interface {
	Actors() ([]Actor, error)
	Campaigns() ([]Campaign, error)
	Techniques() ([]Technique, error)
}

type MalwareObject struct {
	BaseModel
	BaseAttributes
	// These are properties from the MITRE ATT&CK json
	XMitrePlatforms    []string `json:"x_mitre_platforms,omitempty"`
	XMitreAliases      []string `json:"x_mitre_aliases,omitempty"`
	ExternalReferences []ExternalReference `json:"external_references"`
	Labels                  []string `json:"labels"`
	XMitreAttackSpecVersion string   `json:"x_mitre_attack_spec_version"`
	XMitreModifiedByRef     string   `json:"x_mitre_modified_by_ref"`
	XMitreContributors      []string `json:"x_mitre_contributors,omitempty"`
	malwareExternalAttributes
}

type malwareExternalAttributes struct {
	// external collected data attributes below
	Names              []string `json:"names"`
	Comments           []string `json:"comments"`
	Family             []string `json:"family"`
	Links              []string `json:"links"`
	License            string   `json:"license"`
	Price              string   `json:"price"`
	Github             string   `json:"github"`
	Site               string   `json:"site"`
	Twitter            string   `json:"twitter"`
	Evaluator          string   `json:"evaluator"`
	Date               string   `json:"date"`
	Version            int      `json:"version"`
	Implementation     string   `json:"implementation"`
	HowTo              string   `json:"how_to"`
	Slingshot          string   `json:"slingshot"`
	Kali               string   `json:"kali"`
	Server             string   `json:"server"`
	Implant            string   `json:"implant"`
	MultiUser          bool     `json:"multi_user"`
	UI                 bool     `json:"ui"`
	DarkMode           bool     `json:"dark_mode"`
	API                bool     `json:"api"`
	Windows            bool     `json:"windows"`
	Linux              bool     `json:"linux"`
	MacOS              bool     `json:"macos"`
	TCP                bool     `json:"tcp"`
	HTTP               bool     `json:"http"`
	HTTP2              bool     `json:"http2"`
	HTTP3              bool     `json:"http3"`
	DNS                bool     `json:"dns"`
	DOH                bool     `json:"doh"`
	ICMP               bool     `json:"icmp"`
	FTP                bool     `json:"ftp"`
	IMAP               bool     `json:"imap"`
	MAPI               bool     `json:"mapi"`
	SMB                bool     `json:"smb"`
	LDAP               bool     `json:"ldap"`
	KeyExchange        bool     `json:"key_exchange"`
	Stego              bool     `json:"stego"`
	ProxyAware         bool     `json:"proxy_aware"`
	DomainFront        bool     `json:"domainfront"`
	CustomProfile      bool     `json:"custom_profile"`
	Jitter             bool     `json:"jitter"`
	WorkingHours       bool     `json:"working_hours"`
	KillDate           bool     `json:"kill_date"`
	Chaining           bool     `json:"chaining"`
	Logging            bool     `json:"logging"`
	InWild             bool     `json:"in_wild"`
	AttckMapping       bool     `json:"attck_mapping"`
	Dashboard          bool     `json:"dashboard"`
	Blog               string   `json:"blog"`
	C2MatrixIndicators string   `json:"c2_matrix_indicators"`
	Jarm               bool     `json:"jarm"`
	ActivelyMaint      bool     `json:"actively_maint"`
	Slack              bool     `json:"slack"`
	SlackMembers       bool     `json:"slack_members"`
	GhIssues           bool     `json:"gh_issues"`
	Notes              string   `json:"notes"`
	SocksSupport       bool     `json:"socks_support"`
}

func NewMalware(object map[string]interface{}) (MalwareObject, error) {
	externalAttributes, err := parseExternalAttributes(object)
	if err != nil {
		slogger.Error(fmt.Sprintf("Error parsing external attributes: %s", err))
	}
	malware := MalwareObject{
		malwareExternalAttributes: externalAttributes,
	}
	baseModel, err := parseBaseModel(object)
	if err != nil {
		slogger.Error(fmt.Sprintf("Error parsing base model: %s", err))
	}
	malware.BaseModel = baseModel
	baseAttributes, err := parseBaseAttributes(object)
	if err != nil {
		slogger.Error(fmt.Sprintf("Error parsing base attributes: %s", err))
	}
	malware.BaseAttributes = baseAttributes
	if object["x_mitre_platforms"] != nil {
		malware.XMitrePlatforms = ConvertInterfaceArrayToStringArray(object["x_mitre_platforms"].([]interface{}))
	}
	if object["x_mitre_aliases"] != nil {
		malware.XMitreAliases = ConvertInterfaceArrayToStringArray(object["x_mitre_aliases"].([]interface{}))
	}
	if object["external_references"] != nil {
		refs, err := parseExternalReferences(object)
		if err != nil {
			slogger.Error(fmt.Sprintf("Error parsing external references: %s", err))
		}
		malware.ExternalReferences = refs
	}
	if object["labels"] != nil {
		malware.Labels = ConvertInterfaceArrayToStringArray(object["labels"].([]interface{}))
	}
	if object["x_mitre_attack_spec_version"] != nil {
		malware.XMitreAttackSpecVersion = object["x_mitre_attack_spec_version"].(string)
	}
	if object["x_mitre_modified_by_ref"] != nil {
		malware.XMitreModifiedByRef = object["x_mitre_modified_by_ref"].(string)
	}
	if object["x_mitre_contributors"] != nil {
		malware.XMitreContributors = ConvertInterfaceArrayToStringArray(object["x_mitre_contributors"].([]interface{}))
	}
	return malware, nil
}


func (m *MalwareObject) Actors() ([]Actor, error) {
	return nil, nil
}

func (m *MalwareObject) Campaigns() ([]Campaign, error) {
	return nil, nil
}

func (m *MalwareObject) Techniques() ([]Technique, error) {
	return nil, nil
}

func parseExternalAttributes(object map[string]interface{}) (malwareExternalAttributes, error) {
	externalAttributes := malwareExternalAttributes{}
	if object["names"] != nil {
		externalAttributes.Names = ConvertInterfaceArrayToStringArray(object["names"].([]interface{}))
	}
	if object["comments"] != nil {
		externalAttributes.Comments = ConvertInterfaceArrayToStringArray(object["comments"].([]interface{}))
	}
	if object["family"] != nil {
		externalAttributes.Family = ConvertInterfaceArrayToStringArray(object["family"].([]interface{}))
	}
	if object["links"] != nil {
		externalAttributes.Links = ConvertInterfaceArrayToStringArray(object["links"].([]interface{}))
	}
	if object["license"] != nil {
		externalAttributes.License = object["license"].(string)
	}
	if object["price"] != nil {
		externalAttributes.Price = object["price"].(string)
	}
	if object["github"] != nil {
		externalAttributes.Github = object["github"].(string)
	}
	if object["site"] != nil {
		externalAttributes.Site = object["site"].(string)
	}
	if object["twitter"] != nil {
		externalAttributes.Twitter = object["twitter"].(string)
	}
	if object["evaluator"] != nil {
		externalAttributes.Evaluator = object["evaluator"].(string)
	}
	if object["date"] != nil {
		externalAttributes.Date = object["date"].(string)
	}
	if object["version"] != nil {
		externalAttributes.Version = int(object["version"].(float64))
	}
	if object["implementation"] != nil {
		externalAttributes.Implementation = object["implementation"].(string)
	}
	if object["how_to"] != nil {
		externalAttributes.HowTo = object["how_to"].(string)
	}
	if object["slingshot"] != nil {
		externalAttributes.Slingshot = object["slingshot"].(string)
	}
	if object["kali"] != nil {
		externalAttributes.Kali = object["kali"].(string)
	}
	if object["server"] != nil {
		externalAttributes.Server = object["server"].(string)
	}
	if object["implant"] != nil {
		externalAttributes.Implant = object["implant"].(string)
	}
	if object["multi_user"] != nil {
		externalAttributes.MultiUser = object["multi_user"].(bool)
	}
	if object["ui"] != nil {
		externalAttributes.UI = object["ui"].(bool)
	}
	if object["dark_mode"] != nil {
		externalAttributes.DarkMode = object["dark_mode"].(bool)
	}
	if object["api"] != nil {
		externalAttributes.API = object["api"].(bool)
	}
	if object["windows"] != nil {
		externalAttributes.Windows = object["windows"].(bool)
	}
	if object["linux"] != nil {
		externalAttributes.Linux = object["linux"].(bool)
	}
	if object["macos"] != nil {
		externalAttributes.MacOS = object["macos"].(bool)
	}
	if object["tcp"] != nil {
		externalAttributes.TCP = object["tcp"].(bool)
	}
	if object["http"] != nil {
		externalAttributes.HTTP = object["http"].(bool)
	}
	if object["http2"] != nil {
		externalAttributes.HTTP2 = object["http2"].(bool)
	}
	if object["http3"] != nil {
		externalAttributes.HTTP3 = object["http3"].(bool)
	}
	if object["dns"] != nil {
		externalAttributes.DNS = object["dns"].(bool)
	}
	if object["doh"] != nil {
		externalAttributes.DOH = object["doh"].(bool)
	}
	if object["icmp"] != nil {
		externalAttributes.ICMP = object["icmp"].(bool)
	}
	if object["ftp"] != nil {
		externalAttributes.FTP = object["ftp"].(bool)
	}
	if object["imap"] != nil {
		externalAttributes.IMAP = object["imap"].(bool)
	}
	if object["mapi"] != nil {
		externalAttributes.MAPI = object["mapi"].(bool)
	}
	if object["smb"] != nil {
		externalAttributes.SMB = object["smb"].(bool)
	}
	if object["ldap"] != nil {
		externalAttributes.LDAP = object["ldap"].(bool)
	}
	if object["key_exchange"] != nil {
		externalAttributes.KeyExchange = object["key_exchange"].(bool)
	}
	if object["stego"] != nil {
		externalAttributes.Stego = object["stego"].(bool)
	}
	if object["proxy_aware"] != nil {
		externalAttributes.ProxyAware = object["proxy_aware"].(bool)
	}
	if object["domainfront"] != nil {
		externalAttributes.DomainFront = object["domainfront"].(bool)
	}
	if object["custom_profile"] != nil {
		externalAttributes.CustomProfile = object["custom_profile"].(bool)
	}
	if object["jitter"] != nil {
		externalAttributes.Jitter = object["jitter"].(bool)
	}
	if object["working_hours"] != nil {
		externalAttributes.WorkingHours = object["working_hours"].(bool)
	}
	if object["kill_date"] != nil {
		externalAttributes.KillDate = object["kill_date"].(bool)
	}
	if object["chaining"] != nil {
		externalAttributes.Chaining = object["chaining"].(bool)
	}
	if object["logging"] != nil {
		externalAttributes.Logging = object["logging"].(bool)
	}
	if object["in_wild"] != nil {
		externalAttributes.InWild = object["in_wild"].(bool)
	}
	if object["attck_mapping"] != nil {
		externalAttributes.AttckMapping = object["attck_mapping"].(bool)
	}
	if object["dashboard"] != nil {
		externalAttributes.Dashboard = object["dashboard"].(bool)
	}
	if object["blog"] != nil {
		externalAttributes.Blog = object["blog"].(string)
	}
	if object["c2_matrix_indicators"] != nil {
		externalAttributes.C2MatrixIndicators = object["c2_matrix_indicators"].(string)
	}
	if object["jarm"] != nil {
		externalAttributes.Jarm = object["jarm"].(bool)
	}
	if object["actively_maint"] != nil {
		externalAttributes.ActivelyMaint = object["actively_maint"].(bool)
	}
	if object["slack"] != nil {
		externalAttributes.Slack = object["slack"].(bool)
	}
	if object["slack_members"] != nil {
		externalAttributes.SlackMembers = object["slack_members"].(bool)
	}
	if object["gh_issues"] != nil {
		externalAttributes.GhIssues = object["gh_issues"].(bool)
	}
	if object["notes"] != nil {
		externalAttributes.Notes = object["notes"].(string)
	}
	if object["socks_support"] != nil {
		externalAttributes.SocksSupport = object["socks_support"].(bool)
	}
	return externalAttributes, nil
}